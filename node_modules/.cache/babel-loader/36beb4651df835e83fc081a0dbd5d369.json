{"ast":null,"code":"var _jsxFileName = \"/Users/iko/Desktop/Capstone-front-end/src/components/Payment/Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Elements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CARD_OPTIONS = {\n  iconStyle: \"solid\",\n  style: {\n    base: {\n      iconColor: \"#c4f0ff\",\n      color: \"#fff\",\n      fontWeight: 500,\n      fontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\n      fontSize: \"16px\",\n      fontSmoothing: \"antialiased\",\n      \":-webkit-autofill\": {\n        color: \"#fce883\"\n      },\n      \"::placeholder\": {\n        color: \"#87bbfd\"\n      }\n    },\n    invalid: {\n      iconColor: \"#ffc7ee\",\n      color: \"#ffc7ee\"\n    }\n  }\n};\nconst PUBLIC_KEY = \"pk_test_51KM1pjL937qYPF70Y3OoumxOhuN1uMzfHAnkNHfXptLhCkYy4SwmDdE1hPZ6YfIJbrrXD3WaAbnAyZlFUWUK2sse00X5WQrbKp\";\nconst stripeTestPromise = loadStripe(PUBLIC_KEY);\n\nfunction Card() {\n  _s();\n\n  const [success, setSuccess] = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    /*const {error, paymentMethod} = await stripe.createPaymentMethod({\n        type: \"card\",\n        card: elements.getElement(CardElement)\n    })\n     if(!error) {\n        try {\n            const {id} = paymentMethod\n            const response = await axios.post(\"http://localhost:4000/payment\", {\n                amout: 1000,\n                id\n            })\n                 if(response.data.success) {\n                console.log(\"Successful payment\")\n                setSuccess(true)\n            }\n        \n        }catch(error){\n            console.log(\"Error\",error)\n        }\n    } else {\n        console.log(error.message)\n    }*/\n  };\n\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripeTestPromise,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(CardElement, {\n        options: CARD_OPTIONS\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Pay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Card, \"6hDlQMsgCa6cRk+jdFUeEqLw/RU=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/iko/Desktop/Capstone-front-end/src/components/Payment/Card.js"],"names":["React","useState","Elements","loadStripe","CardElement","useElements","useStripe","axios","CARD_OPTIONS","iconStyle","style","base","iconColor","color","fontWeight","fontFamily","fontSize","fontSmoothing","invalid","PUBLIC_KEY","stripeTestPromise","Card","success","setSuccess","stripe","elements","handleSubmit","e","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAAQC,WAAR,EAAqBC,WAArB,EAAkCC,SAAlC,QAAmD,yBAAnD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,SAAS,EAAE,OADS;AAEpBC,EAAAA,KAAK,EAAE;AACNC,IAAAA,IAAI,EAAE;AACLC,MAAAA,SAAS,EAAE,SADN;AAELC,MAAAA,KAAK,EAAE,MAFF;AAGLC,MAAAA,UAAU,EAAE,GAHP;AAILC,MAAAA,UAAU,EAAE,yCAJP;AAKLC,MAAAA,QAAQ,EAAE,MALL;AAMLC,MAAAA,aAAa,EAAE,aANV;AAOL,2BAAqB;AAAEJ,QAAAA,KAAK,EAAE;AAAT,OAPhB;AAQL,uBAAiB;AAAEA,QAAAA,KAAK,EAAE;AAAT;AARZ,KADA;AAWNK,IAAAA,OAAO,EAAE;AACRN,MAAAA,SAAS,EAAE,SADH;AAERC,MAAAA,KAAK,EAAE;AAFC;AAXH;AAFa,CAArB;AAsBA,MAAMM,UAAU,GAAG,6GAAnB;AACA,MAAMC,iBAAiB,GAAGjB,UAAU,CAACgB,UAAD,CAApC;;AAEA,SAASE,IAAT,GAAgB;AAAA;;AACZ,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBtB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMuB,MAAM,GAAGlB,SAAS,EAAxB;AACA,QAAMmB,QAAQ,GAAGpB,WAAW,EAA5B;;AAEA,QAAMqB,YAAY,GAAG,MAAOC,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGK,GA1BD;;AA6BA,sBACQ,QAAC,QAAD;AAAU,IAAA,MAAM,EAAER,iBAAlB;AAAA,2BAEI;AAAM,MAAA,QAAQ,EAAEM,YAAhB;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,OAAO,EAAElB;AAAtB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADR;AAUH;;GA5CQa,I;UAEUf,S,EACED,W;;;KAHZgB,I;AA8CT,eAAeA,IAAf","sourcesContent":["import React, {useState} from 'react'\nimport { Elements } from '@stripe/react-stripe-js'\nimport { loadStripe } from '@stripe/stripe-js'\nimport {CardElement, useElements, useStripe } from '@stripe/react-stripe-js'\nimport axios from 'axios'\n\n\nconst CARD_OPTIONS = {\n\ticonStyle: \"solid\",\n\tstyle: {\n\t\tbase: {\n\t\t\ticonColor: \"#c4f0ff\",\n\t\t\tcolor: \"#fff\",\n\t\t\tfontWeight: 500,\n\t\t\tfontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\n\t\t\tfontSize: \"16px\",\n\t\t\tfontSmoothing: \"antialiased\",\n\t\t\t\":-webkit-autofill\": { color: \"#fce883\" },\n\t\t\t\"::placeholder\": { color: \"#87bbfd\" }\n\t\t},\n\t\tinvalid: {\n\t\t\ticonColor: \"#ffc7ee\",\n\t\t\tcolor: \"#ffc7ee\"\n\t\t}\n\t}\n}\n\n\n\nconst PUBLIC_KEY = \"pk_test_51KM1pjL937qYPF70Y3OoumxOhuN1uMzfHAnkNHfXptLhCkYy4SwmDdE1hPZ6YfIJbrrXD3WaAbnAyZlFUWUK2sse00X5WQrbKp\"\nconst stripeTestPromise = loadStripe(PUBLIC_KEY)\n\nfunction Card() {\n    const [success, setSuccess] = useState(false)\n    const stripe = useStripe()\n    const elements = useElements()\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        /*const {error, paymentMethod} = await stripe.createPaymentMethod({\n            type: \"card\",\n            card: elements.getElement(CardElement)\n        })\n\n        if(!error) {\n            try {\n                const {id} = paymentMethod\n                const response = await axios.post(\"http://localhost:4000/payment\", {\n                    amout: 1000,\n                    id\n                })\n    \n                if(response.data.success) {\n                    console.log(\"Successful payment\")\n                    setSuccess(true)\n                }\n            \n            }catch(error){\n                console.log(\"Error\",error)\n            }\n        } else {\n            console.log(error.message)\n        }*/\n    }\n    \n\n    return(\n            <Elements stripe={stripeTestPromise}>\n    \n                <form onSubmit={handleSubmit}>\n                    <CardElement options={CARD_OPTIONS}/>\n                    <button>Pay</button>\n                </form>\n\n            </Elements>\n    )\n}\n\nexport default Card"]},"metadata":{},"sourceType":"module"}