{"ast":null,"code":"var _jsxFileName = \"/Users/iko/Desktop/Capstone-front-end/src/components/Payment/paymentForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport axios from 'axios'; // {/* <form onSubmit={handleSubmit}> */}\n// <CardElement options={CARD_OPTIONS}/>\n// {/* <button>Pay</button>\n// </form> */}\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PaymentForm() {\n  _s();\n\n  const [success, setSuccess] = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n  const CARD_OPTIONS = {\n    iconStyle: \"solid\",\n    style: {\n      base: {\n        iconColor: \"#c4f0ff\",\n        color: \"#fff\",\n        fontWeight: 500,\n        fontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\n        fontSize: \"16px\",\n        fontSmoothing: \"antialiased\",\n        \":-webkit-autofill\": {\n          color: \"#fce883\"\n        },\n        \"::placeholder\": {\n          color: \"#87bbfd\"\n        }\n      },\n      invalid: {\n        iconColor: \"#ffc7ee\",\n        color: \"#ffc7ee\"\n      }\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement)\n    });\n\n    if (!error) {\n      try {\n        const {\n          id\n        } = paymentMethod;\n        const response = await axios.post(\"http://localhost:4000/payment\", {\n          amout: 1000,\n          id\n        });\n\n        if (response.data.success) {\n          console.log(\"Successful payment\");\n          setSuccess(true);\n        }\n      } catch (error) {\n        console.log(\"Error\", error);\n      }\n    } else {\n      console.log(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !success ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n        className: \"FormGroup\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"FormRow\",\n          children: /*#__PURE__*/_jsxDEV(CardElement, {\n            options: CARD_OPTIONS\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Pay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"   Thanks for your phurchasing! We will notice you when the store accept your order!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(PaymentForm, \"3M65JtgjWGh1mYAp6u5p5vuuMcA=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = PaymentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"sources":["/Users/iko/Desktop/Capstone-front-end/src/components/Payment/paymentForm.js"],"names":["React","useState","CardElement","useElements","useStripe","axios","PaymentForm","success","setSuccess","stripe","elements","CARD_OPTIONS","iconStyle","style","base","iconColor","color","fontWeight","fontFamily","fontSize","fontSmoothing","invalid","handleSubmit","e","preventDefault","error","paymentMethod","createPaymentMethod","type","card","getElement","id","response","post","amout","data","console","log","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,WAAR,EAAqBC,WAArB,EAAkCC,SAAlC,QAAmD,yBAAnD;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AACA;;;;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AAElC,QAAM,CAACC,OAAD,EAASC,UAAT,IAAuBP,QAAQ,CAAC,KAAD,CAArC;AACA,QAAMQ,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAMM,QAAQ,GAAGP,WAAW,EAA5B;AAEA,QAAMQ,YAAY,GAAG;AACjBC,IAAAA,SAAS,EAAE,OADM;AAEjBC,IAAAA,KAAK,EAAE;AACHC,MAAAA,IAAI,EAAE;AACFC,QAAAA,SAAS,EAAE,SADT;AAEFC,QAAAA,KAAK,EAAE,MAFL;AAGFC,QAAAA,UAAU,EAAE,GAHV;AAIFC,QAAAA,UAAU,EAAE,yCAJV;AAKFC,QAAAA,QAAQ,EAAE,MALR;AAMFC,QAAAA,aAAa,EAAE,aANb;AAOF,6BAAqB;AAAEJ,UAAAA,KAAK,EAAE;AAAT,SAPnB;AAQF,yBAAiB;AAAEA,UAAAA,KAAK,EAAE;AAAT;AARf,OADH;AAWHK,MAAAA,OAAO,EAAE;AACLN,QAAAA,SAAS,EAAE,SADN;AAELC,QAAAA,KAAK,EAAE;AAFF;AAXN;AAFU,GAArB;;AAoBA,QAAMM,YAAY,GAAG,MAAOC,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAyB,MAAMjB,MAAM,CAACkB,mBAAP,CAA2B;AAC5DC,MAAAA,IAAI,EAAE,MADsD;AAE5DC,MAAAA,IAAI,EAAEnB,QAAQ,CAACoB,UAAT,CAAoB5B,WAApB;AAFsD,KAA3B,CAArC;;AAKA,QAAG,CAACuB,KAAJ,EAAW;AACP,UAAI;AACA,cAAM;AAACM,UAAAA;AAAD,YAAOL,aAAb;AACA,cAAMM,QAAQ,GAAG,MAAM3B,KAAK,CAAC4B,IAAN,CAAW,+BAAX,EAA4C;AAC/DC,UAAAA,KAAK,EAAE,IADwD;AAE/DH,UAAAA;AAF+D,SAA5C,CAAvB;;AAKA,YAAGC,QAAQ,CAACG,IAAT,CAAc5B,OAAjB,EAA0B;AACtB6B,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA7B,UAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AAEJ,OAZD,CAYC,OAAMiB,KAAN,EAAY;AACTW,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBZ,KAApB;AACH;AACJ,KAhBD,MAgBO;AACHW,MAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAK,CAACa,OAAlB;AACH;AACJ,GA3BD;;AA4BA,sBACI;AAAA,cAEC,CAAC/B,OAAD,gBACG;AAAM,MAAA,QAAQ,EAAEe,YAAhB;AAAA,8BACI;AAAU,QAAA,SAAS,EAAC,WAApB;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,iCACI,QAAC,WAAD;AAAa,YAAA,OAAO,EAAEX;AAAtB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,gBAUG;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAZJ,mBADJ;AAqBH;;GA3EuBL,W;UAGLF,S,EACED,W;;;KAJGG,W","sourcesContent":["import React, {useState} from 'react'\nimport {CardElement, useElements, useStripe } from '@stripe/react-stripe-js'\nimport axios from 'axios'\n\n// {/* <form onSubmit={handleSubmit}> */}\n// <CardElement options={CARD_OPTIONS}/>\n// {/* <button>Pay</button>\n// </form> */}\n\nexport default function PaymentForm (){\n\n    const [success,setSuccess] = useState(false)\n    const stripe = useStripe()\n    const elements = useElements()\n\n    const CARD_OPTIONS = {\n        iconStyle: \"solid\",\n        style: {\n            base: {\n                iconColor: \"#c4f0ff\",\n                color: \"#fff\",\n                fontWeight: 500,\n                fontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\n                fontSize: \"16px\",\n                fontSmoothing: \"antialiased\",\n                \":-webkit-autofill\": { color: \"#fce883\" },\n                \"::placeholder\": { color: \"#87bbfd\" }\n            },\n            invalid: {\n                iconColor: \"#ffc7ee\",\n                color: \"#ffc7ee\"\n            }\n        }\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n\n        const {error, paymentMethod} = await stripe.createPaymentMethod({\n            type: \"card\",\n            card: elements.getElement(CardElement)\n        })\n\n        if(!error) {\n            try {\n                const {id} = paymentMethod\n                const response = await axios.post(\"http://localhost:4000/payment\", {\n                    amout: 1000,\n                    id\n                })\n    \n                if(response.data.success) {\n                    console.log(\"Successful payment\")\n                    setSuccess(true)\n                }\n            \n            }catch(error){\n                console.log(\"Error\",error)\n            }\n        } else {\n            console.log(error.message)\n        }\n    }\n    return (\n        <>\n    \n        {!success ? \n            <form onSubmit={handleSubmit}>\n                <fieldset className=\"FormGroup\">\n                    <div className=\"FormRow\">\n                        <CardElement options={CARD_OPTIONS}/>\n                    </div>\n                </fieldset>\n                <button>Pay</button>\n            </form>\n            :\n            <div>\n                <h2>   Thanks for your phurchasing! \nWe will notice you when the store accept your order!</h2>\n            </div> \n        }\n\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}