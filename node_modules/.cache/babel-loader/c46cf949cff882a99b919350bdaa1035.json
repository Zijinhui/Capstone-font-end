{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zhuan\\\\ttp_repo\\\\Capstone\\\\Capstone-font-end\\\\src\\\\components\\\\Payment\\\\Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Elements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CARD_OPTIONS = {\n  iconStyle: \"solid\",\n  style: {\n    base: {\n      iconColor: \"#c4f0ff\",\n      color: \"#fff\",\n      fontWeight: 500,\n      fontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\n      fontSize: \"16px\",\n      fontSmoothing: \"antialiased\",\n      \":-webkit-autofill\": {\n        color: \"#fce883\"\n      },\n      \"::placeholder\": {\n        color: \"#87bbfd\"\n      }\n    },\n    invalid: {\n      iconColor: \"#ffc7ee\",\n      color: \"#ffc7ee\"\n    }\n  }\n};\nconst PUBLIC_KEY = \"pk_test_51KM1pjL937qYPF70Y3OoumxOhuN1uMzfHAnkNHfXptLhCkYy4SwmDdE1hPZ6YfIJbrrXD3WaAbnAyZlFUWUK2sse00X5WQrbKp\";\nconst stripeTestPromise = loadStripe(PUBLIC_KEY);\n\nfunction Card() {\n  _s();\n\n  const [success, setSuccess] = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    /*const {error, paymentMethod} = await stripe.createPaymentMethod({\r\n        type: \"card\",\r\n        card: elements.getElement(CardElement)\r\n    })\r\n      if(!error) {\r\n        try {\r\n            const {id} = paymentMethod\r\n            const response = await axios.post(\"http://localhost:4000/payment\", {\r\n                amout: 1000,\r\n                id\r\n            })\r\n                  if(response.data.success) {\r\n                console.log(\"Successful payment\")\r\n                setSuccess(true)\r\n            }\r\n        \r\n        }catch(error){\r\n            console.log(\"Error\",error)\r\n        }\r\n    } else {\r\n        console.log(error.message)\r\n    }*/\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Card Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Elements, {\n      stripe: stripeTestPromise,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(CardElement, {\n            options: CARD_OPTIONS\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Pay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"You just bought a sushi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this), \"}\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Card, \"6hDlQMsgCa6cRk+jdFUeEqLw/RU=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["C:/Users/zhuan/ttp_repo/Capstone/Capstone-font-end/src/components/Payment/Card.js"],"names":["React","useState","Elements","loadStripe","CardElement","useElements","useStripe","axios","CARD_OPTIONS","iconStyle","style","base","iconColor","color","fontWeight","fontFamily","fontSize","fontSmoothing","invalid","PUBLIC_KEY","stripeTestPromise","Card","success","setSuccess","stripe","elements","handleSubmit","e","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAAQC,WAAR,EAAqBC,WAArB,EAAkCC,SAAlC,QAAmD,yBAAnD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,SAAS,EAAE,OADS;AAEpBC,EAAAA,KAAK,EAAE;AACNC,IAAAA,IAAI,EAAE;AACLC,MAAAA,SAAS,EAAE,SADN;AAELC,MAAAA,KAAK,EAAE,MAFF;AAGLC,MAAAA,UAAU,EAAE,GAHP;AAILC,MAAAA,UAAU,EAAE,yCAJP;AAKLC,MAAAA,QAAQ,EAAE,MALL;AAMLC,MAAAA,aAAa,EAAE,aANV;AAOL,2BAAqB;AAAEJ,QAAAA,KAAK,EAAE;AAAT,OAPhB;AAQL,uBAAiB;AAAEA,QAAAA,KAAK,EAAE;AAAT;AARZ,KADA;AAWNK,IAAAA,OAAO,EAAE;AACRN,MAAAA,SAAS,EAAE,SADH;AAERC,MAAAA,KAAK,EAAE;AAFC;AAXH;AAFa,CAArB;AAsBA,MAAMM,UAAU,GAAG,6GAAnB;AACA,MAAMC,iBAAiB,GAAGjB,UAAU,CAACgB,UAAD,CAApC;;AAEA,SAASE,IAAT,GAAgB;AAAA;;AACZ,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBtB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMuB,MAAM,GAAGlB,SAAS,EAAxB;AACA,QAAMmB,QAAQ,GAAGpB,WAAW,EAA5B;;AAEA,QAAMqB,YAAY,GAAG,MAAOC,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGK,GA1BD;;AA6BA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,MAAM,EAAER,iBAAlB;AAAA,6BACA;AAAA,gCAEI;AAAM,UAAA,QAAQ,EAAEM,YAAhB;AAAA,kCACI,QAAC,WAAD;AAAa,YAAA,OAAO,EAAElB;AAAtB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,oBAOI;AAAA,iCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;GArDQa,I;UAEUf,S,EACED,W;;;KAHZgB,I;AAuDT,eAAeA,IAAf","sourcesContent":["import React, {useState} from 'react'\r\nimport { Elements } from '@stripe/react-stripe-js'\r\nimport { loadStripe } from '@stripe/stripe-js'\r\nimport {CardElement, useElements, useStripe } from '@stripe/react-stripe-js'\r\nimport axios from 'axios'\r\n\r\n\r\nconst CARD_OPTIONS = {\r\n\ticonStyle: \"solid\",\r\n\tstyle: {\r\n\t\tbase: {\r\n\t\t\ticonColor: \"#c4f0ff\",\r\n\t\t\tcolor: \"#fff\",\r\n\t\t\tfontWeight: 500,\r\n\t\t\tfontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\r\n\t\t\tfontSize: \"16px\",\r\n\t\t\tfontSmoothing: \"antialiased\",\r\n\t\t\t\":-webkit-autofill\": { color: \"#fce883\" },\r\n\t\t\t\"::placeholder\": { color: \"#87bbfd\" }\r\n\t\t},\r\n\t\tinvalid: {\r\n\t\t\ticonColor: \"#ffc7ee\",\r\n\t\t\tcolor: \"#ffc7ee\"\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n\r\nconst PUBLIC_KEY = \"pk_test_51KM1pjL937qYPF70Y3OoumxOhuN1uMzfHAnkNHfXptLhCkYy4SwmDdE1hPZ6YfIJbrrXD3WaAbnAyZlFUWUK2sse00X5WQrbKp\"\r\nconst stripeTestPromise = loadStripe(PUBLIC_KEY)\r\n\r\nfunction Card() {\r\n    const [success, setSuccess] = useState(false)\r\n    const stripe = useStripe()\r\n    const elements = useElements()\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        /*const {error, paymentMethod} = await stripe.createPaymentMethod({\r\n            type: \"card\",\r\n            card: elements.getElement(CardElement)\r\n        })\r\n\r\n        if(!error) {\r\n            try {\r\n                const {id} = paymentMethod\r\n                const response = await axios.post(\"http://localhost:4000/payment\", {\r\n                    amout: 1000,\r\n                    id\r\n                })\r\n    \r\n                if(response.data.success) {\r\n                    console.log(\"Successful payment\")\r\n                    setSuccess(true)\r\n                }\r\n            \r\n            }catch(error){\r\n                console.log(\"Error\",error)\r\n            }\r\n        } else {\r\n            console.log(error.message)\r\n        }*/\r\n    }\r\n    \r\n\r\n    return(\r\n        <div>\r\n            <h1>Card Form</h1>\r\n            <Elements stripe={stripeTestPromise}>\r\n            <div>\r\n            \r\n                <form onSubmit={handleSubmit}>\r\n                    <CardElement options={CARD_OPTIONS}/>\r\n                    <button>Pay</button>\r\n                </form>\r\n                :\r\n                <div>\r\n                    <h2>You just bought a sushi</h2>\r\n                </div>\r\n                }\r\n                </div>\r\n            </Elements>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card"]},"metadata":{},"sourceType":"module"}